'''
Створіть функцію <morse_code>, яка приймає на вхід рядок у вигляді коду Морзе
та виводить декодоване значення (латинськими літерами).
   Особливості:
    - використовуються лише крапки, тире і пробіли (.- )
    - один пробіл означає нову літеру
    - три пробіли означають нове слово
    - результат може бути case-insensetive (на ваш розсуд - велики чи маленькими літерами).
    - для простоти реалізації - цифри, знаки пунктуацїї, дужки, лапки тощо використовуватися не будуть.
      Лише латинські літери.
    - додайте можливість декодування сервісного сигналу SOS (...---...)
    Приклад:
    --. . . -.- .... ..- -...   .. ...   .... . .-. .
    результат: GEEKHUB IS HERE
'''

def morse_code(morse_str):
    morse_dict = {
        '.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D',
        '.': 'E', '..-.': 'F', '--.': 'G', '....': 'H',
        '..': 'I', '.---': 'J', '-.-': 'K', '.-..': 'L',
        '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P',
        '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T',
        '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X',
        '-.--': 'Y', '--..': 'Z', '...---...': 'SOS'
    }

    message = []
    # morse_words = ['--. . . -.- .... ..- -...', '.. ...', '.... . .-. .'] - список з трьох слів
    morse_words = morse_str.split('   ')

    for morse_word in morse_words:
        # letters_list на кожній ітерації = списку з букв одного слова
        letters_list = morse_word.split()
        # word на кожній ітерації = списку зі слів перекладених за допомогою словника
        word = ''.join([morse_dict[morse_letter] for morse_letter in letters_list])
        message.append(word)
    return ' '.join(message)

user_input = input('Please input morse code: ')
result = morse_code(user_input)

print(result)






